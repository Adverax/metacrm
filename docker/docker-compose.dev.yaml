version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: metacrm-postgres-dev
    environment:
      POSTGRES_USER: metacrm
      POSTGRES_PASSWORD: metacrm_dev_password
      POSTGRES_DB: metacrm
      POSTGRES_DBs: metacrm,iam,data,analytics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.sh:/docker-entrypoint-initdb.d/init-databases.sh:ro
      - ./postgres/create-pgtap-extension.sh:/docker-entrypoint-initdb.d/create-pgtap-extension.sh:ro
    networks:
      - metacrm-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metacrm -d metacrm"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: metacrm-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - metacrm-dev
    command: redis-server --appendonly yes --requirepass metacrm_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Kafka (for event streaming)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: metacrm-zookeeper-dev
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - metacrm-dev

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: metacrm-kafka-dev
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - metacrm-dev
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Commander (Redis Web UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: metacrm-redis-commander-dev
    environment:
      REDIS_HOSTS: local:redis:6379:0:metacrm_redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - metacrm-dev

  # pgAdmin (PostgreSQL Web UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: metacrm-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@metacrm.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - metacrm-dev
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Jaeger (Distributed Tracing)
  jaeger:
    image: jaegertracing/all-in-one:1.49
    container_name: metacrm-jaeger-dev
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - metacrm-dev

  # Prometheus (Metrics)
  prometheus:
    image: prom/prometheus:latest
    container_name: metacrm-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - metacrm-dev

  # Grafana (Metrics Dashboard)
  grafana:
    image: grafana/grafana:latest
    container_name: metacrm-grafana-dev
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - metacrm-dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  grafana_data:
    driver: local

networks:
  metacrm-dev:
    driver: bridge

secrets:
  github_token:
    environment: GH_PAT