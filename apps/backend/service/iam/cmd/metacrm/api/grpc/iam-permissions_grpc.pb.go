// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.7
// source: iam-permissions.proto

package contracts

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PermissionService_GetUserObjectPermissions_FullMethodName    = "/iam.permissions.v1.PermissionService/GetUserObjectPermissions"
	PermissionService_GetUserFieldPermissions_FullMethodName     = "/iam.permissions.v1.PermissionService/GetUserFieldPermissions"
	PermissionService_GetUserGroupMemberships_FullMethodName     = "/iam.permissions.v1.PermissionService/GetUserGroupMemberships"
	PermissionService_GetAllUserObjectPermissions_FullMethodName = "/iam.permissions.v1.PermissionService/GetAllUserObjectPermissions"
	PermissionService_GetAllUserFieldPermissions_FullMethodName  = "/iam.permissions.v1.PermissionService/GetAllUserFieldPermissions"
	PermissionService_CheckUserObjectPermission_FullMethodName   = "/iam.permissions.v1.PermissionService/CheckUserObjectPermission"
	PermissionService_CheckUserFieldPermission_FullMethodName    = "/iam.permissions.v1.PermissionService/CheckUserFieldPermission"
	PermissionService_GetBulkObjectPermissions_FullMethodName    = "/iam.permissions.v1.PermissionService/GetBulkObjectPermissions"
	PermissionService_GetBulkFieldPermissions_FullMethodName     = "/iam.permissions.v1.PermissionService/GetBulkFieldPermissions"
)

// PermissionServiceClient is the client API for PermissionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PermissionServiceClient interface {
	// Get user's object permissions for a specific object
	GetUserObjectPermissions(ctx context.Context, in *GetUserObjectPermissionsRequest, opts ...grpc.CallOption) (*GetUserObjectPermissionsResponse, error)
	// Get user's field permissions for a specific field
	GetUserFieldPermissions(ctx context.Context, in *GetUserFieldPermissionsRequest, opts ...grpc.CallOption) (*GetUserFieldPermissionsResponse, error)
	// Get user's group memberships
	GetUserGroupMemberships(ctx context.Context, in *GetUserGroupMembershipsRequest, opts ...grpc.CallOption) (*GetUserGroupMembershipsResponse, error)
	// Get all object permissions for a user
	GetAllUserObjectPermissions(ctx context.Context, in *GetAllUserObjectPermissionsRequest, opts ...grpc.CallOption) (*GetAllUserObjectPermissionsResponse, error)
	// Get all field permissions for a user within an object
	GetAllUserFieldPermissions(ctx context.Context, in *GetAllUserFieldPermissionsRequest, opts ...grpc.CallOption) (*GetAllUserFieldPermissionsResponse, error)
	// Check if user has specific permission on object
	CheckUserObjectPermission(ctx context.Context, in *CheckUserObjectPermissionRequest, opts ...grpc.CallOption) (*CheckUserObjectPermissionResponse, error)
	// Check if user has specific permission on field
	CheckUserFieldPermission(ctx context.Context, in *CheckUserFieldPermissionRequest, opts ...grpc.CallOption) (*CheckUserFieldPermissionResponse, error)
	// Get permission details for multiple objects at once
	GetBulkObjectPermissions(ctx context.Context, in *GetBulkObjectPermissionsRequest, opts ...grpc.CallOption) (*GetBulkObjectPermissionsResponse, error)
	// Get permission details for multiple fields at once
	GetBulkFieldPermissions(ctx context.Context, in *GetBulkFieldPermissionsRequest, opts ...grpc.CallOption) (*GetBulkFieldPermissionsResponse, error)
}

type permissionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPermissionServiceClient(cc grpc.ClientConnInterface) PermissionServiceClient {
	return &permissionServiceClient{cc}
}

func (c *permissionServiceClient) GetUserObjectPermissions(ctx context.Context, in *GetUserObjectPermissionsRequest, opts ...grpc.CallOption) (*GetUserObjectPermissionsResponse, error) {
	out := new(GetUserObjectPermissionsResponse)
	err := c.cc.Invoke(ctx, PermissionService_GetUserObjectPermissions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) GetUserFieldPermissions(ctx context.Context, in *GetUserFieldPermissionsRequest, opts ...grpc.CallOption) (*GetUserFieldPermissionsResponse, error) {
	out := new(GetUserFieldPermissionsResponse)
	err := c.cc.Invoke(ctx, PermissionService_GetUserFieldPermissions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) GetUserGroupMemberships(ctx context.Context, in *GetUserGroupMembershipsRequest, opts ...grpc.CallOption) (*GetUserGroupMembershipsResponse, error) {
	out := new(GetUserGroupMembershipsResponse)
	err := c.cc.Invoke(ctx, PermissionService_GetUserGroupMemberships_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) GetAllUserObjectPermissions(ctx context.Context, in *GetAllUserObjectPermissionsRequest, opts ...grpc.CallOption) (*GetAllUserObjectPermissionsResponse, error) {
	out := new(GetAllUserObjectPermissionsResponse)
	err := c.cc.Invoke(ctx, PermissionService_GetAllUserObjectPermissions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) GetAllUserFieldPermissions(ctx context.Context, in *GetAllUserFieldPermissionsRequest, opts ...grpc.CallOption) (*GetAllUserFieldPermissionsResponse, error) {
	out := new(GetAllUserFieldPermissionsResponse)
	err := c.cc.Invoke(ctx, PermissionService_GetAllUserFieldPermissions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) CheckUserObjectPermission(ctx context.Context, in *CheckUserObjectPermissionRequest, opts ...grpc.CallOption) (*CheckUserObjectPermissionResponse, error) {
	out := new(CheckUserObjectPermissionResponse)
	err := c.cc.Invoke(ctx, PermissionService_CheckUserObjectPermission_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) CheckUserFieldPermission(ctx context.Context, in *CheckUserFieldPermissionRequest, opts ...grpc.CallOption) (*CheckUserFieldPermissionResponse, error) {
	out := new(CheckUserFieldPermissionResponse)
	err := c.cc.Invoke(ctx, PermissionService_CheckUserFieldPermission_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) GetBulkObjectPermissions(ctx context.Context, in *GetBulkObjectPermissionsRequest, opts ...grpc.CallOption) (*GetBulkObjectPermissionsResponse, error) {
	out := new(GetBulkObjectPermissionsResponse)
	err := c.cc.Invoke(ctx, PermissionService_GetBulkObjectPermissions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) GetBulkFieldPermissions(ctx context.Context, in *GetBulkFieldPermissionsRequest, opts ...grpc.CallOption) (*GetBulkFieldPermissionsResponse, error) {
	out := new(GetBulkFieldPermissionsResponse)
	err := c.cc.Invoke(ctx, PermissionService_GetBulkFieldPermissions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermissionServiceServer is the server API for PermissionService service.
// All implementations must embed UnimplementedPermissionServiceServer
// for forward compatibility
type PermissionServiceServer interface {
	// Get user's object permissions for a specific object
	GetUserObjectPermissions(context.Context, *GetUserObjectPermissionsRequest) (*GetUserObjectPermissionsResponse, error)
	// Get user's field permissions for a specific field
	GetUserFieldPermissions(context.Context, *GetUserFieldPermissionsRequest) (*GetUserFieldPermissionsResponse, error)
	// Get user's group memberships
	GetUserGroupMemberships(context.Context, *GetUserGroupMembershipsRequest) (*GetUserGroupMembershipsResponse, error)
	// Get all object permissions for a user
	GetAllUserObjectPermissions(context.Context, *GetAllUserObjectPermissionsRequest) (*GetAllUserObjectPermissionsResponse, error)
	// Get all field permissions for a user within an object
	GetAllUserFieldPermissions(context.Context, *GetAllUserFieldPermissionsRequest) (*GetAllUserFieldPermissionsResponse, error)
	// Check if user has specific permission on object
	CheckUserObjectPermission(context.Context, *CheckUserObjectPermissionRequest) (*CheckUserObjectPermissionResponse, error)
	// Check if user has specific permission on field
	CheckUserFieldPermission(context.Context, *CheckUserFieldPermissionRequest) (*CheckUserFieldPermissionResponse, error)
	// Get permission details for multiple objects at once
	GetBulkObjectPermissions(context.Context, *GetBulkObjectPermissionsRequest) (*GetBulkObjectPermissionsResponse, error)
	// Get permission details for multiple fields at once
	GetBulkFieldPermissions(context.Context, *GetBulkFieldPermissionsRequest) (*GetBulkFieldPermissionsResponse, error)
	mustEmbedUnimplementedPermissionServiceServer()
}

// UnimplementedPermissionServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPermissionServiceServer struct {
}

func (UnimplementedPermissionServiceServer) GetUserObjectPermissions(context.Context, *GetUserObjectPermissionsRequest) (*GetUserObjectPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserObjectPermissions not implemented")
}
func (UnimplementedPermissionServiceServer) GetUserFieldPermissions(context.Context, *GetUserFieldPermissionsRequest) (*GetUserFieldPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFieldPermissions not implemented")
}
func (UnimplementedPermissionServiceServer) GetUserGroupMemberships(context.Context, *GetUserGroupMembershipsRequest) (*GetUserGroupMembershipsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserGroupMemberships not implemented")
}
func (UnimplementedPermissionServiceServer) GetAllUserObjectPermissions(context.Context, *GetAllUserObjectPermissionsRequest) (*GetAllUserObjectPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUserObjectPermissions not implemented")
}
func (UnimplementedPermissionServiceServer) GetAllUserFieldPermissions(context.Context, *GetAllUserFieldPermissionsRequest) (*GetAllUserFieldPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUserFieldPermissions not implemented")
}
func (UnimplementedPermissionServiceServer) CheckUserObjectPermission(context.Context, *CheckUserObjectPermissionRequest) (*CheckUserObjectPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserObjectPermission not implemented")
}
func (UnimplementedPermissionServiceServer) CheckUserFieldPermission(context.Context, *CheckUserFieldPermissionRequest) (*CheckUserFieldPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserFieldPermission not implemented")
}
func (UnimplementedPermissionServiceServer) GetBulkObjectPermissions(context.Context, *GetBulkObjectPermissionsRequest) (*GetBulkObjectPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBulkObjectPermissions not implemented")
}
func (UnimplementedPermissionServiceServer) GetBulkFieldPermissions(context.Context, *GetBulkFieldPermissionsRequest) (*GetBulkFieldPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBulkFieldPermissions not implemented")
}
func (UnimplementedPermissionServiceServer) mustEmbedUnimplementedPermissionServiceServer() {}

// UnsafePermissionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PermissionServiceServer will
// result in compilation errors.
type UnsafePermissionServiceServer interface {
	mustEmbedUnimplementedPermissionServiceServer()
}

func RegisterPermissionServiceServer(s grpc.ServiceRegistrar, srv PermissionServiceServer) {
	s.RegisterService(&PermissionService_ServiceDesc, srv)
}

func _PermissionService_GetUserObjectPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserObjectPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetUserObjectPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_GetUserObjectPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetUserObjectPermissions(ctx, req.(*GetUserObjectPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_GetUserFieldPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserFieldPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetUserFieldPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_GetUserFieldPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetUserFieldPermissions(ctx, req.(*GetUserFieldPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_GetUserGroupMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserGroupMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetUserGroupMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_GetUserGroupMemberships_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetUserGroupMemberships(ctx, req.(*GetUserGroupMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_GetAllUserObjectPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllUserObjectPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetAllUserObjectPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_GetAllUserObjectPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetAllUserObjectPermissions(ctx, req.(*GetAllUserObjectPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_GetAllUserFieldPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllUserFieldPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetAllUserFieldPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_GetAllUserFieldPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetAllUserFieldPermissions(ctx, req.(*GetAllUserFieldPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_CheckUserObjectPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserObjectPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).CheckUserObjectPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_CheckUserObjectPermission_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).CheckUserObjectPermission(ctx, req.(*CheckUserObjectPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_CheckUserFieldPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserFieldPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).CheckUserFieldPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_CheckUserFieldPermission_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).CheckUserFieldPermission(ctx, req.(*CheckUserFieldPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_GetBulkObjectPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBulkObjectPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetBulkObjectPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_GetBulkObjectPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetBulkObjectPermissions(ctx, req.(*GetBulkObjectPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_GetBulkFieldPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBulkFieldPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetBulkFieldPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PermissionService_GetBulkFieldPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetBulkFieldPermissions(ctx, req.(*GetBulkFieldPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PermissionService_ServiceDesc is the grpc.ServiceDesc for PermissionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PermissionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "iam.permissions.v1.PermissionService",
	HandlerType: (*PermissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserObjectPermissions",
			Handler:    _PermissionService_GetUserObjectPermissions_Handler,
		},
		{
			MethodName: "GetUserFieldPermissions",
			Handler:    _PermissionService_GetUserFieldPermissions_Handler,
		},
		{
			MethodName: "GetUserGroupMemberships",
			Handler:    _PermissionService_GetUserGroupMemberships_Handler,
		},
		{
			MethodName: "GetAllUserObjectPermissions",
			Handler:    _PermissionService_GetAllUserObjectPermissions_Handler,
		},
		{
			MethodName: "GetAllUserFieldPermissions",
			Handler:    _PermissionService_GetAllUserFieldPermissions_Handler,
		},
		{
			MethodName: "CheckUserObjectPermission",
			Handler:    _PermissionService_CheckUserObjectPermission_Handler,
		},
		{
			MethodName: "CheckUserFieldPermission",
			Handler:    _PermissionService_CheckUserFieldPermission_Handler,
		},
		{
			MethodName: "GetBulkObjectPermissions",
			Handler:    _PermissionService_GetBulkObjectPermissions_Handler,
		},
		{
			MethodName: "GetBulkFieldPermissions",
			Handler:    _PermissionService_GetBulkFieldPermissions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iam-permissions.proto",
}
